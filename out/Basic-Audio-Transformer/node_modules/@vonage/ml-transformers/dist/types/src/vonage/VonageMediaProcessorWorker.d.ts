import { EventDataMap, MediaProcessorInterface } from '@vonage/media-processor';
import { BackgroundOptions, MediaProcessorConfig } from '../../main';
import Emittery from 'emittery';
import MediapipeHelper from '../transformers/MediapipeHelper';
interface InnerEventDataMap {
    initResults: string;
    transformResults: string;
    destroyResults: string;
    setBackgroundOptionsResults: string;
    setVideoBGReadableResults: string;
    setVirtualBGImageResults: string;
}
declare class VonageMediaProcessorWorker extends Emittery<EventDataMap> implements MediaProcessorInterface {
    worker_?: any;
    trackExpectedRate_: number;
    workerInited_: boolean;
    mediapipeHelper_: MediapipeHelper;
    innerEmitty_: Emittery<InnerEventDataMap>;
    constructor();
    private cleanInnerEmitty;
    init(config: MediaProcessorConfig): Promise<void>;
    transform(readable: ReadableStream, writable: WritableStream): Promise<void>;
    destroy(): Promise<void>;
    setTrackExpectedRate(trackExpectedRate: number): void;
    postTrackExpectedRate(): void;
    setBackgroundOptions(backgroundOptions: BackgroundOptions): Promise<void>;
}
export default VonageMediaProcessorWorker;
